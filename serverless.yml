# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: jellacha
# "service" is the name of this project. This will also be added to your AWS resource names.
service: challenge-jaac

provider:
  name: aws
  runtime: nodejs20.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource:
        - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
  environment:
    SWAPI_URL: https://swapi.dev/api/people
    PEOPLE_TABLE: PeopleTable-${self::provider.stage}
    PLANET_TABLE: PlanetTable-${self::provider.stage}
    CACHE_TABLE: CacheTable-${self::provider.stage}
    PAGINATION_LIMIT: 10
    JWT_SEED: Azxlxxl_se3dqwlpo29
    TTL_CACHE: 30
    

resources:
  Resources:
    PeopleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PeopleTable-${self::provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    PlanetTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: PlanetTable-${self::provider.stage}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    CacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CacheTable-${self::provider.stage}
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          Enabled: true
          AttributeName: expireAt
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH

functions:
  fusionados:
    handler: src/handlers/fusionados.handler
    events:
      - http:
          path: fusionados/{id}
          method: get
          request:
            parameters:
              paths:
                id: true
  historial:
    handler: src/handlers/historial.handler
    events:
      - http:
          path: historial
          method: get

  login:
    handler: src/handlers/login.handler
    events:
      - http:
          path: login
          method: post
